@inherits LayoutComponentBase

@inject NavigationManager NavigationManager

@inject MQTTnet.ClientLib.MqttService MqttService

@inject IDialogService DialogService

@* Required *@
<MudThemeProvider />
<MudPopoverProvider />

@* Needed for dialogs *@
<MudDialogProvider />

@* Needed for snackbars *@
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0" Color="MudBlazor.Color.Primary">
        <MudIconButton Icon="@Icons.Material.Filled.ArrowBack" Color="MudBlazor.Color.Inherit" Edge="Edge.Start" Href="Dashboard" />
        <MudText Typo="Typo.h5" Class="ml-3">Fish Sense Web App</MudText>

        <MudSpacer />
        <MudMenu Label="Open Menu" Icon="@Icons.Material.Filled.MoreVert" Color="MudBlazor.Color.Inherit" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
            <MudMenuItem Icon="@Icons.Material.Filled.Settings" Href="Settings">Settings</MudMenuItem>
            <MudMenuItem Icon="@Icons.Material.Filled.Logout" OnClick="LogoutOnClick">Logout</MudMenuItem>
        </MudMenu>
    </MudAppBar>
    <MudMainContent >
        <MudContainer MaxWidth="MaxWidth.Small">
            @Body
        </MudContainer>

    </MudMainContent>
</MudLayout>

<style>
    .dialog-background {
        backdrop-filter: blur(10px);
    }
</style>

@code {

    private void LogoutOnClick()
    {
        MqttService.Disconnect();
        base.StateHasChanged();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (!MqttService.IsConnected())
        {
            OpenDialogAsync();
        }
        base.OnAfterRender(firstRender);
    }

    private Task OpenDialogAsync()
    {
        Console.WriteLine("Opening dialog");
        var options = new DialogOptions 
        { 
            BackgroundClass = "dialog-background",
            FullWidth = true,
            BackdropClick = false,
            CloseOnEscapeKey = false,
            NoHeader = true
        };

        return DialogService.ShowAsync<Components.LoginDialog>("MQTT Connection", options);
    }
}

