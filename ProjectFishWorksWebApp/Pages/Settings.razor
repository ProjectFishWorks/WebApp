@page "/settings"

@using MQTTnet
@inject MQTTnet.ClientLib.MqttService MqttService

<PageTitle>Settings</PageTitle>

<MudCard>
    <MudCardHeader>
        <MudText Typo="Typo.h5">Connection Stats</MudText>
    </MudCardHeader>
    <MudCardContent>
        @if (MqttService.IsConnected())
        {
            <MudChip T="string" Color="MudBlazor.Color.Success">Connected</MudChip>
        }
        else
        {
            <MudChip T="string" Color="MudBlazor.Color.Error">Not Connected</MudChip>
        }
        <MudText Typo="Typo.h6">Messages Received : @MqttService.MeassagesReceived</MudText>
    </MudCardContent>
</MudCard>

<MudCard>
    <MudCardHeader>
        <MudText Typo="Typo.h5">Raw Messages</MudText>
    </MudCardHeader>
    <MudCardContent>
        <MudDataGrid Items="@MqttService.AllMessages" Filterable="false" SortMode="@SortMode.Multiple" Groupable="false">
            <Columns>
                <PropertyColumn Property="x => x.Key" Title="Topic" />
                <PropertyColumn Property="x => x.Value" Title="Data" />
            </Columns>
        </MudDataGrid>
    </MudCardContent>

</MudCard>

@code {

    protected override void OnInitialized()
    {
        MqttService.MessageReceived += MqttClient_MessageReceived;
    }

    private void MqttClient_MessageReceived(object sender, MqttApplicationMessageReceivedEventArgs e)
    {
        base.StateHasChanged();
    }
}L