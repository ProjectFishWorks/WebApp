@using MQTTnet
@using ProjectFishWorksWebApp.Models.DeviceModels
@inject MQTTnet.ClientLib.MqttService MqttService


<MudGrid>
    <MudItem xs=6>
        <MudText Typo="Typo.h6">Leak #1</MudText>
        <MudNumericField @bind-Value="leakSensorDevice.LeakSensor1Sensitivity"
                         Label="Sensor 1 Sensitivity"
                         Variant="Variant.Outlined"
                         Min="0" Max="100" />
        <MudProgressLinear @bind-Value="leakSensorDevice.LeakSensor1Sensitivity"
                           Color="MudBlazor.Color.Warning"
                           Rounded="true" MudBlazor.Size="Size.large"
                           Style="height:10px;" />
        @if (leakSensorDevice.Leak1Detected == true)
        {
            <MudChip T="string"
                     Color="MudBlazor.Color.Error">
                Leak Detected
            </MudChip>
        }
        else
        {
            <MudChip T="string"
                     Color="MudBlazor.Color.Success">
                No Leak Detected
            </MudChip>
        }
    </MudItem>
    <MudItem xs=6>
        <MudText Typo="Typo.h6">Leak #2</MudText>
        <MudNumericField @bind-Value="leakSensorDevice.LeakSensor2Sensitivity"
                         Label="Sensor 2 Sensitivity"
                         Variant="Variant.Outlined"
                         Min="0" Max="100" />
        <MudProgressLinear @bind-Value="leakSensorDevice.LeakSensor2Sensitivity"
                           Color="MudBlazor.Color.Warning"
                           Rounded="true" MudBlazor.Size="Size.large"
                           Style="height:10px;" />
        @if (leakSensorDevice.Leak2Detected == true)
        {
            <MudChip T="string"
                     Color="MudBlazor.Color.Error">
                Leak Detected
            </MudChip>
        }
        else
        {
            <MudChip T="string"
                     Color="MudBlazor.Color.Success">
                No Leak Detected
            </MudChip>
        }
    </MudItem>
    <MudItem xs=6>
        <MudText Typo="Typo.h6">Leak #3</MudText>
        <MudNumericField @bind-Value="leakSensorDevice.LeakSensor3Sensitivity"
                         Label="Sensor 3 Sensitivity"
                         Variant="Variant.Outlined"
                         Min="0" Max="100" />
        <MudProgressLinear @bind-Value="leakSensorDevice.LeakSensor3Sensitivity"
                           Color="MudBlazor.Color.Warning"
                           Rounded="true" MudBlazor.Size="Size.large"
                           Style="height:10px;" />
        @if (leakSensorDevice.Leak3Detected == true)
        {
            <MudChip T="string"
                     Color="MudBlazor.Color.Error">
                Leak Detected
            </MudChip>
        }
        else
        {
            <MudChip T="string"
                     Color="MudBlazor.Color.Success">
                No Leak Detected
            </MudChip>
        }
    </MudItem>
    <MudItem xs=6>
        <MudText Typo="Typo.h6">Leak #4</MudText>
        <MudNumericField @bind-Value="leakSensorDevice.LeakSensor4Sensitivity"
                         Label="Sensor 4 Sensitivity"
                         Variant="Variant.Outlined"
                         Min="0" Max="100" />
        <MudProgressLinear @bind-Value="leakSensorDevice.LeakSensor4Sensitivity"
                           Color="MudBlazor.Color.Warning"
                           Rounded="true" MudBlazor.Size="Size.large"
                           Style="height:10px;" />
        @if (leakSensorDevice.Leak4Detected == true)
        {
            <MudChip T="string"
                     Color="MudBlazor.Color.Error">
                Leak Detected
            </MudChip>
        }
        else
        {
            <MudChip T="string"
                     Color="MudBlazor.Color.Success">
                No Leak Detected
            </MudChip>
        }
    </MudItem>
</MudGrid>


<MudCard>
    <MudCardHeader>
        <MudText Typo="Typo.h4">Water Level Sensors</MudText>
    </MudCardHeader>
    <MudCardContent>
        <MudGrid>
            <MudItem xs=6>
                <MudText Typo="Typo.h6">Water Level #1</MudText>
                @if (leakSensorDevice.HighWaterLevel1 == true)
                {
                    <MudChip T="string"
                             Color="MudBlazor.Color.Error">
                        High
                    </MudChip>
                }
                else
                {
                    <MudChip T="string"
                             Color="MudBlazor.Color.Success">
                        Normal
                    </MudChip>
                }
            </MudItem>
            <MudItem xs=6>
                <MudText Typo="Typo.h6">Water Level #2</MudText>
                @if (leakSensorDevice.HighWaterLevel2 == true)
                {
                    <MudChip T="string"
                             Color="MudBlazor.Color.Error">
                        High
                    </MudChip>
                }
                else
                {
                    <MudChip T="string"
                             Color="MudBlazor.Color.Success">
                        Normal
                    </MudChip>
                }
            </MudItem>
            <MudItem xs=6>
                <MudText Typo="Typo.h6">Water Level #3</MudText>
                @if (leakSensorDevice.HighWaterLevel3 == true)
                {
                    <MudChip T="string"
                             Color="MudBlazor.Color.Error">
                        High
                    </MudChip>
                }
                else
                {
                    <MudChip T="string"
                             Color="MudBlazor.Color.Success">
                        Normal
                    </MudChip>
                }
            </MudItem>
            <MudItem xs=6>
                <MudText Typo="Typo.h6">Water Level #4</MudText>
                @if (leakSensorDevice.HighWaterLevel4 == true)
                {
                    <MudChip T="string"
                             Color="MudBlazor.Color.Error">
                        High
                    </MudChip>
                }
                else
                {
                    <MudChip T="string"
                             Color="MudBlazor.Color.Success">
                        Normal
                    </MudChip>
                }
            </MudItem>
        </MudGrid>
    </MudCardContent>
</MudCard>



@code
{
    [Parameter]
    public int SystemID { get; set; }

    [Parameter]
    public int BaseStationID { get; set; }

    [Parameter]
    public int NodeID { get; set; }


    LeakSensorDevice leakSensorDevice;

    protected override async Task OnInitializedAsync()
    {
        this.leakSensorDevice = new LeakSensorDevice(MqttService, this.SystemID, BaseStationID, this.NodeID);
        if (MqttService.IsConnected())
        {
            MqttService.MessageReceived += MqttClient_MessageReceived;
        }
    }

    private void MqttClient_MessageReceived(object sender, MqttApplicationMessageReceivedEventArgs e)
    {
        base.StateHasChanged();
    }

}
